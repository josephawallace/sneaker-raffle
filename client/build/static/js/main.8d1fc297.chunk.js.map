{"version":3,"sources":["components/Header.jsx","utils/interact.js","static/themes/Theme.jsx","components/ViewTicketModal.jsx","static/images/shoe.png","static/images/sneaker-loading.gif","components/ProductDetails.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","Link","variant","underline","color","require","config","provider","ethers","providers","AlchemyProvider","process","contractABI","RaffleJSON","abi","raffle","Contract","fetchName","a","name","fetchTicketPrice","ticketPrice","fetchIsClosed","isClosed","fetchWinningTicket","winningTicket","getWinningTicket","fetchTickets","tickets","getTickets","connectWallet","window","ethereum","web3Provider","Web3Provider","send","accounts","address","status","console","log","walletConnected","length","buyTicket","size","connection","signer","getSigner","raffleWithSigner","connect","addTicket","value","gasLimit","result","tx","response","axios","post","data","err","holdsTicket","connectionAddress","toString","toLowerCase","i","holder","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","typography","h1","fontFamily","fontWeight","fontStyle","h2","h3","h4","h5","h6","button","fontSize","baseURL","ViewTicketModal","useState","email","phone","shippingAddress","user","setUser","updatedUser","setUpdatedUser","open","setOpen","userTickets","setUserTickets","handleClose","useEffect","get","newUserTickets","forEach","ticket","push","fetchUser","fetchUserTickets","Button","sx","mt","className","disableElevation","onClick","Dialog","maxWidth","onClose","DialogTitle","DialogContent","map","index","id","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","target","DialogActions","put","submitUser","ProductDetails","wallet","setWallet","hasTicket","setHasTicket","raffleDetails","setRaffleDetails","setSize","isReady","setIsReady","loadingMessage","setLoadingMessage","sizesList","number","MenuItem","buyTicketClick","utils","formatEther","holdingTicket","detailsEffect","walletEffect","holdingEffect","on","raffleDetailsLoadingEffect","Container","Typography","m","spacing","src","shoe","alt","FormControl","InputLabel","Select","labelId","event","loadingAnimation","Footer","App","Grid","container","justifyContent","alignItems","item","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8d1fc297.chunk.js","sourcesContent":["import './Header.css';\n\nimport { Link } from '@mui/material';\n\nconst Header = (props) => {\n    return (\n        <header>\n            <Link variant='h6' underline='none' color='#fff'>Snaque</Link>\n        </header>\n    );\n}\n\nexport default Header;","import axios from 'axios';\nimport { ethers } from 'ethers';\nimport RaffleJSON from './Raffle.json'\n\nrequire('dotenv').config();\n\nconst baseURL = 'http://localhost:5000/api';\n\nconst alchemyAPIKey = process.env.REACT_APP_ALCHEMY_API_KEY;\nconst provider = new ethers.providers.AlchemyProvider('ropsten', alchemyAPIKey);\nconst contractABI = RaffleJSON.abi;\nconst contractAddress = '0x2b77F1d6e1CD553ccCC44871295E0eAD883CF2EE';\n\nexport const raffle = new ethers.Contract(contractAddress, contractABI, provider);\n\nexport const fetchName = async () => {\n    const name = await raffle.name();\n    return name; \n};\n\nexport const fetchTicketPrice = async () => {\n    const ticketPrice = await raffle.ticketPrice();\n    return ticketPrice;\n};\n\nexport const fetchIsClosed = async () => {\n    const isClosed = await raffle.isClosed();\n    return isClosed;\n};\n\nexport const fetchTicketLimit = async () => {\n    const ticketLimit = raffle.ticketLimit();\n    return ticketLimit;\n};\n\nexport const fetchWinningTicket = async () => {\n    const winningTicket = raffle.getWinningTicket();\n    return winningTicket;\n};\n\nexport const fetchTickets = async () => {\n    const tickets = raffle.getTickets();\n    return tickets;\n};\n\nexport const fetchTicket = async (index) => {\n    const ticketLimit = raffle.getTicket(index);\n    return ticketLimit;\n};\n\nexport const fetchTicketCount = async () => {\n    const ticketCount = raffle.getTicketCount();\n    return ticketCount;\n};\n\nexport const connectWallet = async () => {\n    if (window.ethereum) {\n        try {\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum)\n            const accounts = await web3Provider.send('eth_requestAccounts', []);\n            return {address: accounts[0], status: 'wallet connected'}\n        } catch(err) {\n            console.log(err);\n        }\n    } else {\n        console.log('You must install Metamask.');\n    }\n};\n\nexport const walletConnected = async () => {\n    if (window.ethereum) {\n        try {\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n            const accounts = await web3Provider.send('eth_accounts', []);\n            if (accounts.length > 0) {\n                return {address: accounts[0], status: 'wallet connected'};\n            }\n        } catch(err) {\n            return console.log(err)\n        } \n    } else {\n        console.log('You must install Metamask.');\n    }\n};\n\nexport const buyTicket = async (size) => {\n    const connection = await walletConnected();\n    if (connection) {\n        try {\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = web3Provider.getSigner();\n            const raffleWithSigner = raffle.connect(signer);\n            const ticketPrice = await raffle.ticketPrice();\n            const result = await raffleWithSigner.addTicket(size, { value: ticketPrice, gasLimit: 500000 });\n            return {address: connection.address, tx: result, status: 'success'}\n        } catch(err) {\n            console.log(err);\n        }\n        try {\n            const response = axios.post(`${baseURL}/user/create`, { address: connection.address });\n            console.log(`response.data: ${response.data}`);\n        } catch (err) {\n            console.log(err);\n        }\n    } else {\n        try {\n            await connectWallet();\n            const result = await buyTicket(size);\n            if (result) {\n                return result;\n            }\n        } catch (err) {\n            console.log('Failed to connect to Ethereum wallet.');\n        }      \n    }\n};\n\nexport const holdsTicket = async () => {\n    const connection = await walletConnected();\n    if (connection) {\n        const connectionAddress = connection.address.toString().toLowerCase();\n        const tickets = await raffle.getTickets();\n        for (let i = 0; i < tickets.length; i++) {\n            const holderAddress = tickets[i].holder.toString().toLowerCase();\n            if (holderAddress === connectionAddress) {\n                return {address: connection.address, status: 'holds ticket'};\n            }\n        }\n    } else {\n        console.log('Failed to connect to Ethereum wallet.');\n    }\n};","import { createTheme } from \"@mui/material\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            light: '#6d6d6d',\n            main: '#424242',\n            dark: '#1b1b1b',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#68ff50',\n            main: '#00E100',\n            dark: '#00ad00',\n            contrastText: '#000',\n        },\n    },\n    typography: {\n        // base font is roboto\n        // headers and buttons use boldface mono45\n        h1: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        h2: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        h3: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        h4: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        h5: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        h6: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', },\n        button: { fontFamily: 'mono45-headline, monospace', fontWeight: 700, fontStyle: 'normal', fontSize: '1.575rem', },\n    },\n});\n\nexport default theme;","import './ViewTicketModal.css';\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { fetchTickets, walletConnected, } from '../utils/interact';\n\nconst baseURL = 'http://localhost:5000/api'\n\nconst ViewTicketModal = (props) => {\n\n    const [ user, setUser ] = useState({address: '', email: '', phone: '', shippingAddress: ''});\n    const [ updatedUser, setUpdatedUser ] = useState(user);\n    const [ open, setOpen ] = useState(false);\n    const [ userTickets, setUserTickets ] = useState([])\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = () => {\n        async function submitUser() {\n            const connection = await walletConnected();\n            if (connection) {\n                try {\n                    const response = await axios.put(`${baseURL}/user/${connection.address}/update`, updatedUser);\n                    setUser(response.data);\n                } catch (err) {\n                    console.log(err);\n                }\n            } else {\n                console.log('Failed to connect to Ethereum wallet.');\n            }\n        }\n        submitUser();\n    };\n\n    const onEmailFieldChange = (email) => {\n        setUpdatedUser({...updatedUser, email: email.target.value});\n    }\n\n    useEffect(() => {\n        async function fetchUser() {\n            const connection = await walletConnected();\n            if (connection) {\n                const response = await axios.get(`${baseURL}/user/${connection.address}`);    \n                if (response.data) { setUser(response.data); setUpdatedUser(response.data); }\n            } else {\n                console.log('Failed to connect to Ethereum wallet.');\n            }\n        }\n\n        async function fetchUserTickets() {\n            const connection = await walletConnected();\n            if (connection) {\n                let newUserTickets = [];\n                const tickets = await fetchTickets();\n                tickets.forEach((ticket) => {\n                    if(connection.address.toString().toLowerCase() === ticket.holder.toString().toLowerCase()) { \n                        newUserTickets.push(ticket); // if the holder address of a ticket in the smart contract matches the current connected address, add it to the user's tickets\n                    }\n                });\n                setUserTickets(newUserTickets);\n            } else {\n                console.log('Failed to connect to Ethereum wallet.')\n            }\n        }\n        fetchUser();\n        fetchUserTickets();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (!user.address) { return; } // if there is no user was loaded into state\n        if (!(user.phone || user.email)) {\n            setOpen(true);\n        }\n    }, [user]);\n\n    return (\n        <div>\n            <Button sx={{ mt: 4 }} className=\"view-ticket\" color=\"primary\" variant=\"contained\" disableElevation onClick={handleClickOpen}>\n                VIEW TICKETS\n            </Button>\n            {/* if the user doesnt have a contact record in the database render below */}\n            {user.email ?\n            <Dialog maxWidth=\"lg\" open={open} onClose={handleClose}>\n                <DialogTitle>Your tickets</DialogTitle>\n                <DialogContent>\n                {userTickets.map((ticket, index) => {\n                    return <p key={index}>Ticket {index+1} ID: {ticket.id}</p>\n                })}\n                </DialogContent>\n                <DialogTitle>Winning ticket</DialogTitle>\n                {(props.winningTicket && props.isClosed) ?\n                <DialogContent>{props.winningTicket.id}</DialogContent>\n                :\n                <DialogContent>No winning ticket announced.</DialogContent>\n                }\n            </Dialog>\n            :null\n            }\n            {/* if the user has a record in the database render the ticket */}\n            {!(user.email) ?\n            <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Get an update if you win!</DialogTitle>\n            <DialogContent>\n            <DialogContentText>\n                We will send updates on changes to the raffle status.\n                The winner will receive a link to input shipping information to receive the prize.\n            </DialogContentText>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth\n                variant=\"standard\"\n                onChange={onEmailFieldChange}\n            />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleSubmit}>Submit</Button>\n            </DialogActions>\n        </Dialog>\n        :null\n        }\n        </div>\n    );\n};\n\nexport default ViewTicketModal;","export default __webpack_public_path__ + \"static/media/shoe.13974086.png\";","export default __webpack_public_path__ + \"static/media/sneaker-loading.511aef2c.gif\";","import './ProductDetails.css';\n\nimport { FormControl, InputLabel, MenuItem, Select, Button, Typography, Container, } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { raffle, fetchName, fetchTicketPrice, buyTicket, walletConnected, holdsTicket, fetchIsClosed, fetchWinningTicket, connectWallet } from '../utils/interact';\nimport theme from '../static/themes/Theme';\nimport ViewTicketModal from './ViewTicketModal';\n\nimport shoe from '../static/images/shoe.png';\nimport loadingAnimation from '../static/images/sneaker-loading.gif'\nimport { ethers } from 'ethers';\n\nconst ProductDetails = (props) => {\n    const [ wallet, setWallet ] = useState('');\n    const [ hasTicket, setHasTicket ] = useState(false);\n    const [ raffleDetails, setRaffleDetails ] = useState({ name: '', ticketPrice: 0, isClosed: false, winningTicket: {}, });\n    const [ size, setSize ] = useState('');\n    const [ isReady, setIsReady ] = useState(false);\n    const [ loadingMessage, setLoadingMessage ] = useState('') \n    \n    const handleSizeSelect = (event) => {\n        setSize(event.target.value);\n    };\n\n    const sizes = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    const sizesList = sizes.map((number) =>\n        <MenuItem key={number} value={number}>US M {number}</MenuItem>\n    );\n\n    const buyTicketClick = async (size) => {\n        if(!size) { return; }\n        setLoadingMessage('Waiting...')\n        setIsReady(false);\n        const response = await buyTicket(size);\n        if (!response) { // buyTicket will not return if the transaction fails\n            setIsReady(true); // loading screen should disappear if the transaction failed\n            console.log('Failed to purchase ticket.');\n        } else {\n            setLoadingMessage('Buying ticket...');\n        }\n    };\n\n    const addWalletListener = () => {\n        if(window.ethereum) {\n            window.ethereum.on('accountsChanged', (accounts) => {\n                if (accounts.length > 0) {\n                    setWallet(accounts[0].toString().toLowerCase());\n                } else {\n                    setWallet('');\n                    console.log('Connect to Metamask using the \"Connect to Wallet\" button.');\n                }\n            });\n        } else {\n            console.log('You must install Metamask.');\n        }\n    }\n\n    const addNewTicketListener = () => {\n        raffle.on('NewTicket', async (holder) => {\n            setHasTicket(await holdsTicket());\n            setIsReady(true); // remove loading screen once the ticket has successfully been added in the contract\n            console.log('NewTicket event fired.');\n        });\n    };\n\n    const addRaffleCloseListener = () => {\n        raffle.on('Closed', async (winningTicket) => {\n            console.log(`Closed event fired with winning ticket ID: ${winningTicket.id}`);\n            setRaffleDetails({...raffleDetails, isClosed: true, winningTicket: winningTicket});\n        });\n    }\n\n    useEffect(() => {\n        async function detailsEffect() {\n            const name = await fetchName();\n            const ticketPrice = await fetchTicketPrice();\n            const status = await fetchIsClosed();\n            const winningTicket = await fetchWinningTicket();\n            setRaffleDetails({...raffleDetails, name: name, ticketPrice: ethers.utils.formatEther(ticketPrice), isClosed: status, winningTicket: winningTicket}); // set component state to match the smart contract\n        }\n\n        async function walletEffect() {\n            const connection = await walletConnected();\n            if (connection) {\n                const address = connection.address;\n                setWallet(address);\n            }\n        }\n\n        async function holdingEffect() {\n            const holdingTicket = await holdsTicket();\n            setHasTicket(holdingTicket);\n        }\n\n        detailsEffect();\n        walletEffect();\n        holdingEffect();\n        addWalletListener();\n        addNewTicketListener();\n        addRaffleCloseListener();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => { // if the wallet changes, check if the new wallet is holding a ticket\n        async function holdingEffect() {\n            const holdingTicket = await holdsTicket();\n            setHasTicket(holdingTicket);\n        }\n        holdingEffect(); \n    }, [ wallet ]);  \n\n    useEffect(() => { // if any raffle details change, make sure the state is consistent with the smart contract\n        async function raffleDetailsLoadingEffect() {\n            const name = await fetchName();\n            const ticketPrice = await fetchTicketPrice();\n            const status = await fetchIsClosed();\n            const winningTicket = await fetchWinningTicket();\n            if (raffleDetails.name === name && raffleDetails.ticketPrice === ethers.utils.formatEther(ticketPrice) && raffleDetails.isClosed === status && raffleDetails.winningTicket.id === winningTicket.id) {\n                setIsReady(true);\n            } else {\n                setRaffleDetails({...raffleDetails, name: name, ticketPrice: ethers.utils.formatEther(ticketPrice), isClosed: status, winningTicket: winningTicket});\n            }\n        }\n        raffleDetailsLoadingEffect();\n    }, [raffleDetails]);\n\n    return (\n        <div className='product-details'>\n            {isReady ? // don't show the loading screen\n            <Container>\n            <Typography variant='h4' m={theme.spacing(0, 0, 4, 0)}>{raffleDetails.name}</Typography>\n            <img id=\"shoe-img\" src={shoe} alt=\"Shoe\" />\n            <hr />\n            <Typography m={theme.spacing(0, 0, 4, 0)}>Ticket Price:    <b>{raffleDetails.ticketPrice} ETH</b></Typography>\n            <Typography m={theme.spacing(4, 0, 4, 0)}><b>Description.</b> The Nike Dunk Low Championship Red features a University Red leather upper with white leather overlays and Swooshes. A matching sole and woven tongue label adds the finishing touches to this retro design.</Typography>\n            <FormControl fullWidth>\n                {!raffleDetails.isClosed &&\n                <InputLabel id=\"size-select-label\">Size</InputLabel>\n                }\n                {!raffleDetails.isClosed &&\n                <Select\n                    labelId=\"size-select-label\"\n                    id=\"size-select\"\n                    value={size}\n                    label=\"Size\"\n                    onChange={handleSizeSelect}\n                >\n                    {sizesList}\n                </Select>\n                }\n                <hr />\n                {!raffleDetails.isClosed &&\n                <Button color=\"secondary\" variant=\"contained\" disableElevation onClick={() => buyTicketClick(size)}>\n                    BUY RAFFLE TICKET\n                </Button>   \n                }\n                {raffleDetails.isClosed &&\n                <Button color=\"primary\" variant=\"contained\" disableElevation onClick={() => console.log('raffle closed.')}>\n                    RAFFLE CLOSED\n                </Button> \n                }\n            </FormControl>\n            {hasTicket ?\n            <ViewTicketModal hasTicket={hasTicket} winningTicket={raffleDetails.winningTicket} isClosed={raffleDetails.isClosed} />\n            :null\n            }\n            {!wallet ?\n            <Button className=\"connect-button\" sx={{ mt: 4 }} color=\"warning\" variant=\"contained\" disableElevation onClick={connectWallet}>\n                CONNECT TO WALLET\n            </Button>\n            :null\n            }\n        </Container>\n        : // show the loading screen\n        <div>\n            <img id=\"loading-gif\" src={loadingAnimation} alt=\"Sneaker loading gif\" />\n            <Typography className=\"loading-message\" variant=\"h4\">{loadingMessage}</Typography>\n        </div>\n        }\n        </div>\n    );\n}\n\nexport default ProductDetails;","import './Footer.css'\n\nimport { Link } from '@mui/material'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <nav className='pages-links'>\n                <Link variant='h6' underline='none' color='primary'>Help</Link>\n            </nav>\n        </footer>\n    );\n};\n\nexport default Footer;","import './App.css';\n\nimport Header from './components/Header';\nimport ProductDetails from './components/ProductDetails';\nimport Footer from './components/Footer';\n\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"main\" maxWidth='lg'>\n        <Grid container justifyContent='center' alignItems='center' spacing={2}>\n          <Grid item lg={6}>\n            <ProductDetails />\n          </Grid>\n        </Grid>\n      </Container >\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material/styles'; \n\nimport App from './App';\nimport theme from './static/themes/Theme';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}